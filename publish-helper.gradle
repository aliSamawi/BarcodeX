def libraryGroupId = 'com.rvhamed.barcodex'
def libraryArtifactId = 'barcodex'
def libraryVersion = 'v1.0-beta04'

//For upload use this command: ./gradlew clean build bintrayUpload
//./gradlew clean build bintrayUpload -PbintrayUser=$B_USER -PbintrayKey=$B_KEY

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = libraryGroupId
                artifactId = libraryArtifactId
                version = libraryVersion
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['release']
    publish = true
    override = true
    configurations = ['archives']
    pkg {
        repo = 'BarcodeX'
        name = libraryArtifactId
        desc = 'Scan barcodes and qrcodes with MLKit. In this project MLKit and CameraX are combined with each other.'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/rvhamed/BarcodeX'
        publicDownloadNumbers = true
        version {
            name = libraryVersion
            released = new Date()
        }
    }
    filesSpec {
        from 'barcodex/build/outputs/aar/barcodex-release.aar'
        into '.'
        version libraryVersion
    }
}

apply plugin: 'maven-publish'
